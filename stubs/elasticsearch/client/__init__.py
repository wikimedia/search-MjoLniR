from typing import Dict, List, Mapping, Optional, Union

Params = Optional[Mapping[str, str]]


class ClusterClient:
    def get_settings(self, params: Params = None) -> Mapping: ...

class IndicesClient:
    def delete(self, index: str, params: Params = None) -> Mapping: ...
    def exists(self, index: str, params: Params = None) -> bool: ...
    def get_alias(self, index: Optional[str] = None, name: Optional[str] = None,
                  params: Params = None) -> Mapping: ...
    def stats(self, index: Optional[str] = None, metric: Optional[str] = None, params: Params = None,
              groups: Optional[Union[str, List[str]]] = None) -> Mapping: ...
    def update_aliases(self, body: Dict[str, List[Dict]], params: Params = None) -> Mapping: ...
